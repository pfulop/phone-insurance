// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <BrowserRouter>
        <div
                className={undefined}
        >
                <header
                        className={undefined}
                >
                        <h1
                                className="App-title"
                        >
                                Phone insurance claim
                        </h1>
                </header>
                <div
                        className={undefined}
                >
                        <Route
                                component={[Function]}
                                exact={true}
                                path="/"
                        />
                        <Route
                                component={[Function]}
                                exact={true}
                                path="/start-claim"
                        />
                        <Route
                                component={[Function]}
                                exact={true}
                                path="/finish"
                        />
                </div>
        </div>
</BrowserRouter>,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className={undefined}
>
          <header
                    className={undefined}
          >
                    <h1
                              className="App-title"
                    >
                              Phone insurance claim
                    </h1>
          </header>
          <div
                    className={undefined}
          >
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/"
                    />
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/start-claim"
                    />
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/finish"
                    />
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <header
              className={undefined}
>
              <h1
                            className="App-title"
              >
                            Phone insurance claim
              </h1>
</header>,
            <div
              className={undefined}
>
              <Route
                            component={[Function]}
                            exact={true}
                            path="/"
              />
              <Route
                            component={[Function]}
                            exact={true}
                            path="/start-claim"
              />
              <Route
                            component={[Function]}
                            exact={true}
                            path="/finish"
              />
</div>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1
                className="App-title"
>
                Phone insurance claim
</h1>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Phone insurance claim",
                "className": "App-title",
              },
              "ref": null,
              "rendered": "Phone insurance claim",
              "type": "h1",
            },
            "type": "header",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
/>,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/start-claim"
/>,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/finish"
/>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/start-claim",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/finish",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <BrowserRouter>
          <div
                    className={undefined}
          >
                    <header
                              className={undefined}
                    >
                              <h1
                                        className="App-title"
                              >
                                        Phone insurance claim
                              </h1>
                    </header>
                    <div
                              className={undefined}
                    >
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/start-claim"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/finish"
                              />
                    </div>
          </div>
</BrowserRouter>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className={undefined}
>
            <header
                        className={undefined}
            >
                        <h1
                                    className="App-title"
                        >
                                    Phone insurance claim
                        </h1>
            </header>
            <div
                        className={undefined}
            >
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/"
                        />
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/start-claim"
                        />
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    path="/finish"
                        />
            </div>
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <header
                className={undefined}
>
                <h1
                                className="App-title"
                >
                                Phone insurance claim
                </h1>
</header>,
              <div
                className={undefined}
>
                <Route
                                component={[Function]}
                                exact={true}
                                path="/"
                />
                <Route
                                component={[Function]}
                                exact={true}
                                path="/start-claim"
                />
                <Route
                                component={[Function]}
                                exact={true}
                                path="/finish"
                />
</div>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1
                  className="App-title"
>
                  Phone insurance claim
</h1>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Phone insurance claim",
                  "className": "App-title",
                },
                "ref": null,
                "rendered": "Phone insurance claim",
                "type": "h1",
              },
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/start-claim"
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/finish"
/>,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/start-claim",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/finish",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
